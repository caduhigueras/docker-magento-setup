services:
  # NGINX for serving Magento
  nginx:
    image: nginx:${NGINX_DOCKER_IMAGE_VERSION}
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ${REPO_ROOT}:/var/www/html
      - ./ssl:/etc/nginx/ssl
    ports:
      - "8080:8080"
      - "80:80"
      - "443:443"
    depends_on:
      - php
      # - varnish
    networks:
      - magento

  # Varnish cache in front of Nginx
  varnish:
    build:
      context: ./varnish
      dockerfile: Dockerfile
      args:
        VARNISH_DOCKER_IMAGE_VERSION: ${VARNISH_DOCKER_IMAGE_VERSION}
        VARNISH_HTTP_PORT: ${VARNISH_HTTP_PORT}
        VARNISH_BACKEND_PORT: ${VARNISH_BACKEND_PORT}
        VARNISH_MEMORY_ALLOCATION: ${VARNISH_MEMORY_ALLOCATION}
        VARNISH_HTTP_RESP_HDR_LEN: ${VARNISH_HTTP_RESP_HDR_LEN}
        VARNISH_HTTP_RESP_SIZE: ${VARNISH_HTTP_RESP_SIZE}
        VARNISH_HTTP_WORKSPACE_BACKEND: ${VARNISH_HTTP_WORKSPACE_BACKEND}
    container_name: varnish
    volumes:
      - ./varnish/default.vcl:/etc/varnish/default.vcl
    ports:
      - "6081:6081"
      - "6082:6082"
      # - "80:80"
    depends_on:
      - php
      # - nginx
    networks:
      - magento
    env_file: ".env"

  # MariaDB 10.6 for database
  mariadb:
    image: mariadb:${MARIADB_DOCKER_IMAGE_VERSION}
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
      - ./mariadb/my.cnf:/etc/mysql/my.cnf
    ports:
      - "3306:3306"
    networks:
      - magento

  # PHP-FPM with Magento
  php:
    build:
      context: ./php
      dockerfile: Dockerfile
      args:
        PHP_DOCKER_IMAGE_VERSION: ${PHP_DOCKER_IMAGE_VERSION}
        PHP_INSTALL_XDEBUG: ${PHP_INSTALL_XDEBUG}
        PHP_INSTALL_DEPENDENCIES: "${PHP_INSTALL_DEPENDENCIES}"
        PHP_INSTALL_EXTENSIONS: ${PHP_INSTALL_EXTENSIONS}
        MAGENTO_VERSION: ${MAGENTO_VERSION}
        MAGENTO_ROOT: ${MAGENTO_ROOT}
        INSTALL_NEW_MAGENTO: ${INSTALL_NEW_MAGENTO}
        MYSQL_DATABASE: ${MYSQL_DATABASE}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        SYSTEM_USER_NAME: ${SYSTEM_USER_NAME}
        SYSTEM_USER_UID: ${SYSTEM_USER_UID}
        SYSTEM_USER_GID: ${SYSTEM_USER_GID}
        MAGENTO_AUTH_CONSUMER: ${MAGENTO_AUTH_CONSUMER}
        MAGENTO_AUTH_KEY: ${MAGENTO_AUTH_KEY}
        PHP_REALPATH_CACHE_SIZE: ${PHP_REALPATH_CACHE_SIZE}
        PHP_REALPATH_CACHE_TTL: ${PHP_REALPATH_CACHE_TTL}
        PHP_OPCACHE_MEMORY_CONSUMPTION: ${PHP_OPCACHE_MEMORY_CONSUMPTION}
        PHP_OPCACHE_MAX_ACCELERATED_FILES: ${PHP_OPCACHE_MAX_ACCELERATED_FILES}
        PHP_OPCACHE_CONSISTENCY_CHECKS: ${PHP_OPCACHE_CONSISTENCY_CHECKS}
        PHP_OPCACHE_VALIDATE_TIMESTAMPS: ${PHP_OPCACHE_VALIDATE_TIMESTAMPS}
        PHP_OPCACHE_ENABLE_CLI: ${PHP_OPCACHE_ENABLE_CLI}
        PHP_OPCACHE_SAVE_COMMENTS: ${PHP_OPCACHE_SAVE_COMMENTS}
        PHP_OPCACHE_FILE_OVERRIDE: ${PHP_OPCACHE_FILE_OVERRIDE}
        PHP_OPCACHE_INTERNED_STRINGS: ${PHP_OPCACHE_INTERNED_STRINGS}
        INSTALL_N98: ${INSTALL_N98}
    container_name: php-fpm
    cpus: "${PHP_CPUS}"
    ports:
      - "9000:9000"
    volumes:
      - ${REPO_ROOT}:/var/www/html
      - ./php/php.ini:/usr/local/etc/php/php.ini
      - ./php/zz-override.conf:/usr/local/etc/php-fpm.d/zz-override.conf
    networks:
      - magento
    depends_on:
      - mariadb
      - redis
      - opensearch
    environment:
      # Use MailCatcher as the SMTP server
      MAIL_HOST: ${MAILCATCHER_HOST}
      MAIL_PORT: ${MAILCATCHER_PORT}
      BLACKFIRE_SERVER_ID: ${BLACKFIRE_SERVER_ID}
      BLACKFIRE_SERVER_TOKEN: ${BLACKFIRE_SERVER_TOKEN}
      BLACKFIRE_CLIENT_ID: ${BLACKFIRE_CLIENT_ID}
      BLACKFIRE_CLIENT_TOKEN: ${BLACKFIRE_CLIENT_TOKEN}
      PHP_IDE_CONFIG: serverName=${XDEBUG_SERVER_NAME}
    env_file: ".env"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  blackfire:
    image: blackfire/blackfire
    container_name: blackfire
    environment:
      BLACKFIRE_SERVER_ID: ${BLACKFIRE_SERVER_ID}
      BLACKFIRE_SERVER_TOKEN: ${BLACKFIRE_SERVER_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - php
    networks:
      - magento

  # Redis 7.2 for cache and session storage
  redis:
    image: redis:${REDIS_DOCKER_IMAGE_VERSION}
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - magento

  # RabbitMQ 3.13 for asynchronous messaging
  rabbitmq:
    image: rabbitmq:${RABBITMQ_DOCKER_IMAGE_VERSION}
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - magento

  # OpenSearch 2.12 for search instead of Elasticsearch
  opensearch:
    image: opensearchproject/opensearch:${OPENSEARCH_DOCKER_IMAGE_VERSION}
    container_name: opensearch
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
      - OPENSEARCH_JAVA_OPTS=-Xms${OPENSEARCH_MEM_LIMIT} -Xmx${OPENSEARCH_MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9600:9600"
    networks:
      - magento

  # MailCatcher service to capture emails
  mailcatcher:
    image: schickling/mailcatcher
    container_name: mailcatcher
    ports:
      - "1025:1025" # SMTP server
      - "1080:1080" # Web interface
    networks:
      - magento

volumes:
  dbdata:
    driver: local

networks:
  magento:
    driver: bridge
    name: "${NETWORK_NAME}"

